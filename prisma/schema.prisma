generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName           String
  lastName            String
  email               String    @unique
  password            String
  posts               Post[]
  role                String    @default("user")
  refreshToken        String?
  refreshTokenExpires DateTime?
  loginDevices        Json[]    @default([])
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Topic {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  slug     String  @unique
  parentId String? @db.ObjectId
  parent   Topic?  @relation("TopicHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children Topic[] @relation("TopicHierarchy")
  posts    Post[]
  rder     Int     @default(0)
}

model Post {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  slug  String @unique

  // কন্টেন্টের জন্য একক ফিল্ড
  content     String?
  htmlContent String?
  contentType String?

  excerpt         String? // অপশনাল করা হয়েছে
  coverImageUrl   String? // নাম পরিবর্তন করে coverImageUrl করা হয়েছে
  previewImageUrl String? // নতুন ফিল্ড
  status          PostStatus @default(DRAFT)
  publishDate     DateTime? // SCHEDULED পোস্টের জন্য নতুন ফিল্ড

  topicId String? @db.ObjectId
  topic   Topic?  @relation(fields: [topicId], references: [id])

  authorId String? @db.ObjectId
  author   User?   @relation(fields: [authorId], references: [id])

  order    Int       @default(0)
  postTags PostTag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // এটি যোগ করা ভালো অভ্যাস
}

model Tag {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  postTags PostTag[]
}

model PostTag {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  postId String @db.ObjectId
  tagId  String @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])
}

enum PostStatus {
  DRAFT
  PUBLISHED
  SCHEDULED
  ARCHIVED
}
